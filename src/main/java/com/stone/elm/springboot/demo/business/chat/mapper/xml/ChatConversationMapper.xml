<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stone.elm.springboot.demo.business.chat.mapper.ChatConversationMapper" >

    <sql id="chatConversationInsertFields">
        chat_conversation_id,
        chat_conversation_no,
        chat_conversation_name,
        chat_conversation_type,
        chat_conversation_actor_id,
        join_time
    </sql>

    <sql id="chatConversationQueryFields">
        t.chat_conversation_id as "chatConversationID",
        t.chat_conversation_no as "chatConversationNo",
        t.chat_conversation_name as "chatConversationName",
        t.chat_conversation_type as "chatConversationType",
        t.chat_conversation_actor_id as "chatConversationActorID",
        t.join_time as "joinTime",
        (select cc.chat_conversation_actor_id from chat_conversation cc where cc.chat_conversation_no = t.chat_conversation_no and cc.chat_conversation_id &lt;&gt; t.chat_conversation_id limit 1 ) as "conversationObjectID",
        (select u.user_name from user_info u where u.user_id = (select cc.chat_conversation_actor_id from chat_conversation cc where cc.chat_conversation_no = t.chat_conversation_no and cc.chat_conversation_id &lt;&gt; t.chat_conversation_id limit 1 )) as "conversationUserName",
        (select u.nick_name from user_info u where u.user_id = (select cc.chat_conversation_actor_id from chat_conversation cc where cc.chat_conversation_no = t.chat_conversation_no and cc.chat_conversation_id &lt;&gt; t.chat_conversation_id limit 1 )) as "conversationNickName",
        (select u.avatar_attach_dtl_id from user_info u where u.user_id = (select cc.chat_conversation_actor_id from chat_conversation cc where cc.chat_conversation_no = t.chat_conversation_no and cc.chat_conversation_id &lt;&gt; t.chat_conversation_id limit 1 )) as "avatarAttachDtlID",
        (select u.online_stat from user_info u where u.user_id = (select cc.chat_conversation_actor_id from chat_conversation cc where cc.chat_conversation_no = t.chat_conversation_no and cc.chat_conversation_id &lt;&gt; t.chat_conversation_id limit 1 )) as "conversationOnLineStat",
        (select count(1) from chat_conversation_message_related ccmr where ccmr.chat_conversation_id = t.chat_conversation_id and ccmr.is_read = '01') "unreadMessagesNumber",
        (select cm.content from chat_conversation_message_related ccmr left join chat_message cm on ccmr.chat_message_id = cm.chat_message_id where ccmr.chat_conversation_id = t.chat_conversation_id order by cm.message_send_date desc limit 1) as "conversationLastMessage",
        (select cm.message_send_date from chat_conversation_message_related ccmr left join chat_message cm on ccmr.chat_message_id = cm.chat_message_id where ccmr.chat_conversation_id = t.chat_conversation_id order by cm.message_send_date desc limit 1) as "conversationLastMessageDate"
    </sql>

    <sql id="chatConversationQueryParam">
        <where>
            <if test="chatConversationID != null and chatConversationID != ''">
                and t.chat_conversation_id = #{chatConversationID}
            </if>
            <if test="chatConversationNo != null and chatConversationNo != ''">
                and t.chat_conversation_no = #{chatConversationNo}
            </if>
            <if test="chatConversationName != null and chatConversationName != ''">
                and t.chat_conversation_name = #{chatConversationName}
            </if>
            <if test="chatConversationType != null and chatConversationType != ''">
                and t.chat_conversation_type = #{chatConversationType}
            </if>
            <if test="chatConversationActorID != null and chatConversationActorID != ''">
                and t.chat_conversation_actor_id = #{chatConversationActorID}
            </if>
            <if test="joinTime != null and joinTime != ''">
                and t.join_time = #{joinTime}
            </if>
        </where>
    </sql>

    <sql id="pageParam">
        <if test="pageSize != null and pageSize != '' and pageNo != null and pageNo != ''">
            limit #{indexStart}, #{pageSize}
        </if>
    </sql>

    <select id="selectChatConversationList" resultType="com.stone.elm.springboot.demo.business.chat.model.vo.ChatConversationVO">
        select
        <include refid="chatConversationQueryFields"/>
        from chat_conversation t
        <include refid="chatConversationQueryParam"/>
        <include refid="pageParam"/>
    </select>

    <select id="selectChatConversationListByUserOneAndUserTwo" resultType="com.stone.elm.springboot.demo.business.chat.model.vo.ChatConversationVO">
        select
        <include refid="chatConversationQueryFields"/>
        from chat_conversation t
        where t.chat_conversation_actor_id in (#{userOneID},  #{userTwoID})
        group by t.chat_conversation_no
        HAVING COUNT(DISTINCT t.chat_conversation_actor_id) > 1;
    </select>

    <select id="countChatConversationAll" resultType="java.lang.Integer">
        select count(1)
        from chat_conversation t
        <include refid="chatConversationQueryParam"/>
    </select>

    <insert id="createChatConversationList">
        insert into chat_conversation(<include refid="chatConversationInsertFields"/>) values
        <foreach collection="createChatConversationList" separator="," item="item" index="index">
            (
            #{item.chatConversationID},
            #{item.chatConversationNo},
            #{item.chatConversationName},
            #{item.chatConversationType},
            #{item.chatConversationActorID},
            #{item.joinTime}
            )
        </foreach>
    </insert>

    <update id="updateChatConversationList">
        <foreach collection="updateChatConversationList" item="item" index="index" open="" close="" separator=";">
            update chat_conversation
            <set>
                <if test="item.chatConversationNo != null and item.chatConversationNo != ''">
                    chat_conversation_no = #{item.chatConversationNo},
                </if>
                <if test="item.chatConversationName != null and item.chatConversationName != ''">
                    chat_conversation_name = #{item.chatConversationName},
                </if>
                <if test="item.chatConversationType != null and item.chatConversationType != ''">
                    chat_conversation_type = #{item.chatConversationType},
                </if>
                <if test="item.chatConversationActorID != null and item.chatConversationActorID != ''">
                    chat_conversation_actor_id = #{item.chatConversationActorID},
                </if>
                <if test="item.joinTime != null and item.joinTime != ''">
                    join_time = #{item.joinTime},
                </if>
                chat_conversation_id = #{item.chatConversationID}
            </set>
            <where>
                chat_conversation_id = #{item.chatConversationID}
            </where>
        </foreach>
    </update>

    <delete id="deleteChatConversationList">
        delete from chat_conversation where chat_conversation_id in (
        <foreach collection="deleteChatConversationList" item="item" index="index" open="" close="" separator=",">
            #{item.chatConversationID}
        </foreach>
        )
    </delete>

</mapper>